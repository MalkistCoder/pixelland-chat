apiVersion: batch/v1
kind: CronJob
metadata:
  name: pixelland-cleaner
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          serviceAccountName: pixel-cluster-service-account
          containers:
            - name: pixelland-cleaner
              env:
                - name: CLEANER_DEBUG
                  value: "false"
                - name: CLEANER_TILE_BUCKET
                  value: pixelland_tiles
                - name: CLEANER_WORLDS_API_URL
                  value: "https://worlds.pixel.land/graphql"
              resources:
                requests:
                  memory: "64Mi"
                  cpu: "100m"
                limits:
                  memory: "128Mi"
                  cpu: "200m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pixelland-ws
spec:
  template:
    spec:
      serviceAccountName: pixel-cluster-service-account
      containers:
        - name: pixelland-ws
          env:
            - name: WS_DEBUG
              value: "false"
            - name: WS_CHAT_API_URL
              value: "https://chat.pixel.land/graphql"
            - name: WS_WORLDS_API_URL
              value: "https://worlds.pixel.land/graphql"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 25
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 25
            periodSeconds: 3
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: pixelland-ws
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80":"backendconfig-websocket-timeout"}}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: pixelland-ws
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      $patch: delete
    - protocol: TCP
      port: 80
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pixelland-chat
spec:
  selector:
    matchLabels:
      app: pixelland-chat
  template:
    metadata:
      labels:
        app: pixelland-chat
    spec:
      serviceAccountName: pixel-cluster-service-account
      containers:
        - name: pixelland-chat
          env:
            - name: CHAT_DEBUG
              value: "false"
            - name: CHAT_SQL_HOST
              value: "127.0.0.1"
            - name: CHAT_SQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: username
            - name: CHAT_SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
            - name: CHAT_SQL_DB_NAME
              value: pixelland-chat
            - name: CHAT_SQL_PORT
              value: "5432"
            - name: CHAT_SEED_DB
              value: "false"
            - name: CHAT_ENFORCE_AUTH
              value: "true"
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.33.0
          command:
            - "/cloud_sql_proxy"
            - "-log_debug_stdout"
            - "-instances=pixelland-282102:us-central1:pixelland=tcp:5432"
          securityContext:
            runAsNonRoot: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 25
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8081
            initialDelaySeconds: 25
            periodSeconds: 3
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "65Mi"
              cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: pixelland-chat
  annotations:
    cloud.google.com/backend-config: '{"ports": {"80":"backendconfig-websocket-timeout"}}'
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: pixelland-chat
  ports:
    - protocol: TCP
      port: 8081
      targetPort: 8081
      $patch: delete
    - protocol: TCP
      port: 80
      targetPort: 8081

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pixelland-worlds
spec:
  selector:
    matchLabels:
      app: pixelland-worlds
  template:
    metadata:
      labels:
        app: pixelland-worlds
    spec:
      serviceAccountName: pixel-cluster-service-account
      containers:
        - name: pixelland-worlds
          env:
            - name: WORLDS_DEBUG
              value: "false"
            - name: WORLDS_ENFORCE_AUTH
              value: "true"
            - name: WORLDS_TILE_BUCKET
              value: "pixelland_tiles"
            - name: WORLDS_CHAT_API_URL
              value: "https://chat.pixel.land/graphql"
            - name: WORLDS_SQL_HOST
              value: "127.0.0.1"
            - name: WORLDS_SQL_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: username
            - name: WORLDS_SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: password
            - name: WORLDS_SQL_DB_NAME
              value: worlds
            - name: WORLDS_SQL_PORT
              value: "5432"
            - name: WORLDS_SEED_DB
              value: "false"
          resources:
            requests:
              memory: "64Mi"
              cpu: "100m"
            limits:
              memory: "128Mi"
              cpu: "200m"
        - name: cloud-sql-proxy
          image: gcr.io/cloudsql-docker/gce-proxy:1.33.0
          command:
            - "/cloud_sql_proxy"
            - "-log_debug_stdout"
            - "-instances=pixelland-282102:us-central1:pixelland=tcp:5432"
          securityContext:
            runAsNonRoot: true
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8082
            initialDelaySeconds: 25
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8082
            initialDelaySeconds: 25
            periodSeconds: 3
          resources:
            requests:
              memory: "32Mi"
              cpu: "50m"
            limits:
              memory: "65Mi"
              cpu: "100m"
---
apiVersion: v1
kind: Service
metadata:
  name: pixelland-worlds
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: pixelland-worlds
  ports:
    - protocol: TCP
      port: 8082
      targetPort: 8082
      $patch: delete
    - protocol: TCP
      port: 80
      targetPort: 8082

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pixelland-images
spec:
  selector:
    matchLabels:
      app: pixelland-images
  template:
    metadata:
      labels:
        app: pixelland-images
    spec:
      serviceAccountName: pixel-cluster-service-account
      containers:
        - name: pixelland-images
          env:
            - name: IMAGES_DEBUG
              value: "false"
            - name: IMAGES_TILE_BUCKET
              value: "pixelland_tiles"
            - name: IMAGES_WORLDS_API_URL
              value: "https://worlds.pixel.land/graphql"
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8083
            initialDelaySeconds: 25
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8083
            initialDelaySeconds: 25
            periodSeconds: 3
          resources:
            requests:
              memory: "128Mi"
              cpu: "200m"
            limits:
              memory: "256Mi"
              cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: pixelland-images
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: NodePort
  selector:
    app: pixelland-images
  ports:
    - protocol: TCP
      port: 8083
      targetPort: 8083
      $patch: delete
    - protocol: TCP
      port: 80
      targetPort: 8083
